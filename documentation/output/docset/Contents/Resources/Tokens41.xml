<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/CSSensorRequirements.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/CSSensorRequirements</TokenIdentifier>
			<Abstract type="html">Handles requirements. Requirements are a layer on top of settings that help dealing with several incompatible settings. Right now requirements should be used to handle the enabling and disabling of sensors and to set the sample interval and accuracy for a sensor. Whenever two different consumer set different intervals or accuracies, the lowest value is used.</Abstract>
			<DeclaredIn>CSSensorRequirements.h</DeclaredIn>
            
			
			<NodeRef refid="41"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CSSensorRequirements/sharedRequirements</TokenIdentifier>
			<Abstract type="html">Get singleton instance</Abstract>
			<DeclaredIn>CSSensorRequirements.h</DeclaredIn>
			
			<Declaration>+ (CSSensorRequirements *)sharedRequirements</Declaration>
			
			
			<Anchor>//api/name/sharedRequirements</Anchor>
            <NodeRef refid="41"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CSSensorRequirements/requirementForSensor:</TokenIdentifier>
			<Abstract type="html">Helper function to create a requirement for a sensor</Abstract>
			<DeclaredIn>CSSensorRequirements.h</DeclaredIn>
			
			<Declaration>+ (NSDictionary *)requirementForSensor:(NSString *)sensor</Declaration>
			<Parameters>
				<Parameter>
					<Name>sensor</Name>
					<Abstract type="html">The sensor name for the sensor that should be enabled</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/requirementForSensor:</Anchor>
            <NodeRef refid="41"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CSSensorRequirements/requirementForSensor:withInterval:</TokenIdentifier>
			<Abstract type="html">Helper function to create a requirement for a sensor with an interval</Abstract>
			<DeclaredIn>CSSensorRequirements.h</DeclaredIn>
			
			<Declaration>+ (NSDictionary *)requirementForSensor:(NSString *)sensor withInterval:(NSTimeInterval)interval</Declaration>
			<Parameters>
				<Parameter>
					<Name>sensor</Name>
					<Abstract type="html">The sensor name for the sensor that should be enabled with a certain interval</Abstract>
				</Parameter><Parameter>
					<Name>interval</Name>
					<Abstract type="html">Time interval describing the frequency with which the sensor should poll new data</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/requirementForSensor:withInterval:</Anchor>
            <NodeRef refid="41"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSSensorRequirements/setRequirements:byConsumer:</TokenIdentifier>
			<Abstract type="html">Set requirements for a specific consumer. Overwrites previous requirement for the consumer</Abstract>
			<DeclaredIn>CSSensorRequirements.h</DeclaredIn>
			
			<Declaration>- (void)setRequirements:(NSArray *)requirements byConsumer:(NSString *)consumer</Declaration>
			<Parameters>
				<Parameter>
					<Name>requirements</Name>
					<Abstract type="html">Array of requirements to set for that consumer. See the example above for an example of the format</Abstract>
				</Parameter><Parameter>
					<Name>consumer</Name>
					<Abstract type="html">Unique identifier for the consumer setting the requirement (e.g. app identifier or library identifier)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setRequirements:byConsumer:</Anchor>
            <NodeRef refid="41"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSSensorRequirements/clearRequirementsForConsumer:</TokenIdentifier>
			<Abstract type="html">Clear the requirements of a consumer</Abstract>
			<DeclaredIn>CSSensorRequirements.h</DeclaredIn>
			
			<Declaration>- (void)clearRequirementsForConsumer:(NSString *)consumer</Declaration>
			<Parameters>
				<Parameter>
					<Name>consumer</Name>
					<Abstract type="html">Identifier of the consumer for which the requirements should be cleared.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/clearRequirementsForConsumer:</Anchor>
            <NodeRef refid="41"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSSensorRequirements/setIsEnabled:</TokenIdentifier>
			<Abstract type="html">Whether the requirements are enabled or disabled. They are enabled by default. If disabled, changing a requirement will not affect the settings</Abstract>
			<DeclaredIn>CSSensorRequirements.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL isEnabled</Declaration>
			
			
			<Anchor>//api/name/isEnabled</Anchor>
            <NodeRef refid="41"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSSensorRequirements/isEnabled</TokenIdentifier>
			<Abstract type="html">Whether the requirements are enabled or disabled. They are enabled by default. If disabled, changing a requirement will not affect the settings</Abstract>
			<DeclaredIn>CSSensorRequirements.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL isEnabled</Declaration>
			
			
			<Anchor>//api/name/isEnabled</Anchor>
            <NodeRef refid="41"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CSSensorRequirements/isEnabled</TokenIdentifier>
			<Abstract type="html">Whether the requirements are enabled or disabled. They are enabled by default. If disabled, changing a requirement will not affect the settings</Abstract>
			<DeclaredIn>CSSensorRequirements.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL isEnabled</Declaration>
			
			
			<Anchor>//api/name/isEnabled</Anchor>
            <NodeRef refid="41"/>
		</Token>
		
        
        
	</File>
</Tokens>